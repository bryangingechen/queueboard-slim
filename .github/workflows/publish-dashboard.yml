name: Publish Dashboard

on:
  schedule:
    - cron: '*/5 * * * *'  # Runs every 5 minutes, the fastest github actions allow
  workflow_dispatch:       # Allows manual execution

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up environment
      run: |
        sudo apt-get update
        sudo apt-get install -y jq curl gh python3 python3-pip
        pip3 install python-dateutil

    - name: "Download .json files for all open PRs"
      id: "download-json"
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        bash ./dashboard.sh

    - name: "(Re-)download missing or outdated PR data"
      if: ${{ !cancelled() }}
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ./download_missing_outdated_PRs.sh

    - name: "Update aggregate data file"
      if: ${{ !cancelled() }}
      run: |
        # Write a file with aggregate PR data, to "processed_data/aggregate_pr_data.json".
        python3 process.py

    - name: "Check data integrity"
      if: ${{ !cancelled() }} && steps.download-json.outcome == 'success'
      run: |
        python check_data_integrity.py

    - name: "Commit and push changes to the master branch"
      if: ${{ !cancelled() }}
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add redownload.txt
        git add missing_prs.txt
        git add processed_data/aggregate_pr_data.json
        git commit -m "Redownload missing or outdated data; regenerate aggregate_pr_data.json" -a
        git push

    - name: "Regenerate the dashboard webpages"
      if: ${{ !cancelled() }} && steps.download-json.outcome == 'success'
      run: |
        python3 ./dashboard.py "all-open-PRs-1.json" "all-open-PRs-2.json" > ./index.html
        rm *.json

    - name: Commit and push changes
      if: ${{ !cancelled() }}
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        # Temporarily rename {index,on_the_queue}.html to avoid a name collision with
        # existing files on the gh-pages branch.
        mv index.html tmp.html
        mv on_the_queue.html tmp2.html
        git fetch origin gh-pages
        git checkout gh-pages
        mv tmp.html index.html
        mv tmp2.html on_the_queue.html
        git add index.html
        git add on_the_queue.html
        git checkout master -- style.css
        git commit -m "Update dashboard" -a || echo "No changes to commit"
        git push
